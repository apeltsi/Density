export default function Cluster(e,r,a,t){this.drawables=e,this.pos=a,this.size=t,this.priority=r,this.render=renderCluster(this)}function renderCluster(e){var r=document.getElementById("clustercanvas"),a=r.getContext("2d");a.clearRect(0,0,canvas.width,canvas.height);var t=new PriorityQueue(e.drawables.items);r.width=e.size.x,r.height=e.size.y;for(var n=t.length,s=0;s<n;s++){var i=t.dequeue().element.element;if(null==i)return void console.log("ILLEGAL DRAWABLE");if(3==i.type&&(i.x=(i.args.x1+i.args.x2)/2,i.y=(i.args.y1+i.args.y2)/2,i.w=Math.abs(i.args.x1-i.args.x2),i.h=Math.abs(i.args.y1-i.args.y2)),inRenderFrame(new Vec2(i.x,i.y),i.w,i.h,i.anchor)||!i.global){var l=0,o=0,c=i.x,d=i.y,h=i.w,u=i.h;"center"==i.anchor&&(l=-Math.round(canvas.width/2)/renderScale,o=-Math.round(canvas.height/2)/renderScale),i.global?(c=(i.x-engineCore.camPos.x-l)*renderScale,d=(-i.y+engineCore.camPos.y-o)*renderScale,h=i.w*renderScale,u=i.h*renderScale):(c=i.x-l,d=-i.y-o),a.globalAlpha=i.transparency,drawFuncs[i.type](i,c,d,h,u,a,l,o)}}var g=document.createElement("IMG");return g.src=r.toDataURL(),g.id=Math.random()*Number.MAX_SAFE_INTEGER,document.body.appendChild(g),new Drawable("cluster",e.priority,engineCore.getDrawableID(),e.pos.x,e.pos.y,e.size.x,e.size.y,"true","center",g)}